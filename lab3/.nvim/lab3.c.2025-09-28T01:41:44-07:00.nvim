#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define HISTORY_SIZE = 5

void add_to_history(char *history[], char *new_line, int *current_index);
void print_history(char *history[], int current_index, int count);

int main() {
  char *history[HISTORY_SIZE];
  for (int i = 0; i < HISTORY_SIZE; i++) {
    history[i] = NULL;
  }
  printf("Inside main\n");

  int current_index = 0;
  int entry_count = 0;

  char *input = NULL;
  size_t len = 0;

  while (1) {
    printf("Enter input: ");
    if (getline(&input, &len, stdin) == -1) {
      printf("\nExiting\n");
      break;
    }

    if (strcmp(line, "print\n") == 0) {
      print_history(history, current_index, entry_count);
    }

    char *line_copy = strdup(input);
    add_to_history(history, line_copy, &current_index);

    if (entry_count < HISTORY_SIZE) {
      entry_count++;
    }
  }
  free(input);
  for (int i = 0; i < HISTORY_SIZE; i++) {
    if (history[i] != NULL) {
      free(history[i]);
    }
  }

  return 0;
}

void add_to_history(char *history[], char *new_line, int *current_index) {
  if (history[*current_index] != NULL) {
    free(history[*current_index]);
  }

  history[*current_index] = new_line;

  *currrent_index = (*current_index + 1) % HISTORY_SIZE;
}

void print_history(char *history[], int current_index, int count) {
  if (count == 0)
    return;
  int start_index = count <HISTORY_SIZE) ? 0: current_index;

  for (int i = 0; i < count; i++) {
    int index_to_print = (start_index + i) % HISTORY_SIZE;
    if (history[index_to_print] != NULL) {
      printf("%s", history[index_to_print]);
    }
  }
}
